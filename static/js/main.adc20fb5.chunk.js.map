{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","backgroundColor","mode","color","className","style","id","type","Navbar","to","title","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","map","el","charAt","slice","join","navigator","clipboard","writeText","filter","Alert","height","alert","role","word","lower","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.adc20fb5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About(props) {\r\n\r\n  let myStyle = {\r\n    backgroundColor: props.mode === \"light\" ? \"white\" : \"#282e2a\",\r\n    color: props.mode === \"dark\" ? \"white\" : \"black\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={{backgroundColor: props.mode === \"light\" ? \"white\" : \"#282e2a\"}}>\r\n      <h1 className=\"my-3\" style={{color: props.mode === \"dark\" ? \"white\" : \"black\"}}>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" >\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              <strong>Anaylize your text</strong> \r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              TextUitls gives you a way to analyze your text quickly and efficiently. Be it word count, character count, capitalizing text, changing text from LowerCase to Uppercase and vice-versa or removing spaces.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              <strong>Free to use</strong> \r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word / character limit.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              <strong>Browser compatible</strong> \r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, excel document, pdf document, essays, etc.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase!\", \"success\");\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase!\", \"success\");\r\n  };\r\n\r\n  const handleCapitalize = () => {\r\n    let newText = text\r\n      .split(\" \")\r\n      .map((el) => el.charAt(0).toUpperCase() + el.slice(1))\r\n      .join(\" \");\r\n    setText(newText);\r\n    props.showAlert(\"Text Capitalized!\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed!\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Text Copied!\", \"success\");\r\n  };\r\n\r\n  const handleClearText = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared!\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"10\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#282e2a\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLowClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCapitalize}>\r\n          Capitalize\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearText}>\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          <strong>{text.split(/\\s+/).filter(el => el !== \"\").length}</strong> words and\r\n          <strong> {text.length}</strong> chartacters\r\n        </p>\r\n        <p>\r\n          Approx. <strong>{0.008 * text.split(\" \").filter(el => el !== \"\").length}</strong> Minutes read\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Nothing to Preview\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height: '60px'}}>\r\n      {props.alert && \r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}:</strong> {props.alert.msg}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#282e2a\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Lite\";\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode}/>\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm\n                heading=\"Enter The Text To Analyze Below\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}